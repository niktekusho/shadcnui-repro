import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased grid gap-4 dark`}
        /*
          This is required until https://github.com/facebook/react/issues/24430 is fixed.
          In practice, some extensions (example Grammarly) append stuff to the dom elements (attributes, <script> elements, etc.) that confuse React when it's time to hydrate the client.
          This annotation seems to be not recursive (tried it on the html element at the start with no effect).
        */
        suppressHydrationWarning
      >
        {children}
      </body>
    </html>
  );
}
